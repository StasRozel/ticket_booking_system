import React, { useEffect } from 'react';
import '../styles/css/RoutesManagement.css';
import FormNewEntity from './FormNewEntity';
import FormUpdateEntity from './FormUpdateEntity';
import { useDashboard } from '../context/DashboardContext';

let IS_UPDATE = false;

const handleEdit = async () => {
    IS_UPDATE = true;
};

const RoutesManagement: React.FC = () => {  
    const { routes, trigger, is_update, handleEdit, fetchRoutes, DeleteRoute } = useDashboard();

    // eslint-disable-next-line 
    useEffect(() => {   
        fetchRoutes();
    }, [trigger]);

    return (
        <div className="routes-management">
            <h2>–†–∞–±–æ—Ç–∞ —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏</h2>
            <div className="container">
                <div className="routes-management__actions">
                    {!is_update ? <FormNewEntity /> : <FormUpdateEntity />}
                </div>
                <table className="routes-management__table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞</th>
                            <th>–ú–∞—Ä—à—Ä—É—Ç</th>
                            <th>–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏</th>
                            <th>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ</th>
                            <th>–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        {routes.map((route: any) => (
                            <tr key={route.id}>
                                <td>{route.id}</td>
                                <td>{route.name}</td>
                                <td>{`${route.starting_point} ‚Üí ${route.ending_point}`}</td>
                                <td>{route.stops ? route.stops : '–ù–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–æ–∫'}</td>
                                <td>{route.distance} –∫–º</td>
                                <td>{route.price} —Ä—É–±.</td>
                                <td>
                                    <button
                                        className="routes-management__action"
                                        onClick={() => handleEdit()}
                                    >
                                        ‚úèÔ∏è
                                    </button>
                                    <button
                                        className="routes-management__action routes-management__action--delete"
                                        onClick={() => DeleteRoute(route.id)}
                                    >
                                        üóëÔ∏è
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    );
};

export default RoutesManagement;