import React, { useEffect, useState } from 'react';
import '../styles/css/EntitesManagement.css';
import { useDashboard } from '../context/DashboardContext';
import FormUpdateBus from './FormBus';
import ConfirmModal from '../../../shared/components/ConfirmModal';
import { useModal } from '../../../shared/context/ModalContext';
import { BusType } from '../../../shared/types/BusType'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–∏–ø BusType –æ–ø—Ä–µ–¥–µ–ª—ë–Ω

const BusesManagement: React.FC = () => {
    const { buses, trigger, fetchBuses, DeleteBus, OpenModalForm, CloseModalForm, isAddMode, isModalFormOpen, currentEntity } = useDashboard();
    const { modalMessage, isModalOpen, openModal, handleModalClose } = useModal();

    useEffect(() => {
        fetchBuses();
    }, [trigger]);

    const handleEditBus = (bus: BusType) => {
        OpenModalForm(false, bus); // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    };

    return (
        <div className="routes-management">
            <h2>–†–∞–±–æ—Ç–∞ —Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º</h2>
            <div className="container">
                <table className="routes-management__table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>–ù–æ–º–µ—Ä –∞–≤—Ç–æ–±—É—Å–∞</th>
                            <th>–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</th>
                            <th>–¢–∏–ø</th>
                            <th>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</th>
                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        {buses.map((bus: BusType) => (
                            <tr key={bus.id}>
                                <td>{bus.id}</td>
                                <td>{bus.bus_number}</td>
                                <td>{bus.capacity.length ? `${bus.capacity.join(', ') } –º–µ—Å—Ç    ` : '–º–µ—Å—Ç –Ω–µ—Ç'}</td>
                                <td>{bus.type}</td>
                                <td>{bus.available ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</td>
                                <td>
                                    <button
                                        className="routes-management__action"
                                        onClick={() => handleEditBus(bus)}
                                    >
                                        ‚úèÔ∏è
                                    </button>
                                    <button
                                        className="routes-management__action routes-management__action--delete"
                                        onClick={() => openModal('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç?', () => DeleteBus(bus.id as number))}
                                    >
                                        üóëÔ∏è
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
                <div className="routes-management__actions">
                    <button className="routes-management__button__confirm" onClick={() => OpenModalForm(true)}>
                        –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
                    </button>
                </div>
                <FormUpdateBus
                    isOpen={isModalFormOpen}
                    onClose={CloseModalForm}
                    isActive={isAddMode}
                    bus={currentEntity}
                />
            </div>
            <ConfirmModal
                isOpen={isModalOpen}
                onClose={handleModalClose}
                message={modalMessage}
            />
        </div>
    );
};

export default BusesManagement;